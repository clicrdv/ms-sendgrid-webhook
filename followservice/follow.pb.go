// Code generated by protoc-gen-go. DO NOT EDIT.
// source: follow.proto

/*
Package followmailservice is a generated protocol buffer package.

It is generated from these files:
	follow.proto

It has these top-level messages:
	ClicRdvFollowMail
	SendMailStatus
*/
package followmailservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ClicRdvFollowMail struct {
	Email   string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Event   string `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	Uuid    string `protobuf:"bytes,3,opt,name=uuid" json:"uuid,omitempty"`
	GroupId string `protobuf:"bytes,4,opt,name=group_id,json=groupId" json:"group_id,omitempty"`
}

func (m *ClicRdvFollowMail) Reset()                    { *m = ClicRdvFollowMail{} }
func (m *ClicRdvFollowMail) String() string            { return proto.CompactTextString(m) }
func (*ClicRdvFollowMail) ProtoMessage()               {}
func (*ClicRdvFollowMail) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ClicRdvFollowMail) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ClicRdvFollowMail) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *ClicRdvFollowMail) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ClicRdvFollowMail) GetGroupId() string {
	if m != nil {
		return m.GroupId
	}
	return ""
}

type SendMailStatus struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *SendMailStatus) Reset()                    { *m = SendMailStatus{} }
func (m *SendMailStatus) String() string            { return proto.CompactTextString(m) }
func (*SendMailStatus) ProtoMessage()               {}
func (*SendMailStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SendMailStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ClicRdvFollowMail)(nil), "followmailservice.ClicRdvFollowMail")
	proto.RegisterType((*SendMailStatus)(nil), "followmailservice.SendMailStatus")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ClicRdvFollowMailService service

type ClicRdvFollowMailServiceClient interface {
	NotifySentMail(ctx context.Context, in *ClicRdvFollowMail, opts ...grpc.CallOption) (*SendMailStatus, error)
}

type clicRdvFollowMailServiceClient struct {
	cc *grpc.ClientConn
}

func NewClicRdvFollowMailServiceClient(cc *grpc.ClientConn) ClicRdvFollowMailServiceClient {
	return &clicRdvFollowMailServiceClient{cc}
}

func (c *clicRdvFollowMailServiceClient) NotifySentMail(ctx context.Context, in *ClicRdvFollowMail, opts ...grpc.CallOption) (*SendMailStatus, error) {
	out := new(SendMailStatus)
	err := grpc.Invoke(ctx, "/followmailservice.ClicRdvFollowMailService/NotifySentMail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ClicRdvFollowMailService service

type ClicRdvFollowMailServiceServer interface {
	NotifySentMail(context.Context, *ClicRdvFollowMail) (*SendMailStatus, error)
}

func RegisterClicRdvFollowMailServiceServer(s *grpc.Server, srv ClicRdvFollowMailServiceServer) {
	s.RegisterService(&_ClicRdvFollowMailService_serviceDesc, srv)
}

func _ClicRdvFollowMailService_NotifySentMail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClicRdvFollowMail)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClicRdvFollowMailServiceServer).NotifySentMail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/followmailservice.ClicRdvFollowMailService/NotifySentMail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClicRdvFollowMailServiceServer).NotifySentMail(ctx, req.(*ClicRdvFollowMail))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClicRdvFollowMailService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "followmailservice.ClicRdvFollowMailService",
	HandlerType: (*ClicRdvFollowMailServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NotifySentMail",
			Handler:    _ClicRdvFollowMailService_NotifySentMail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "follow.proto",
}

func init() { proto.RegisterFile("follow.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xcb, 0xcf, 0xc9,
	0xc9, 0x2f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x84, 0xf0, 0x72, 0x13, 0x33, 0x73,
	0x8a, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x95, 0xf2, 0xb8, 0x04, 0x9d, 0x73, 0x32, 0x93, 0x83,
	0x52, 0xca, 0xdc, 0xc0, 0x72, 0xbe, 0x89, 0x99, 0x39, 0x42, 0x22, 0x5c, 0xac, 0xa9, 0x20, 0x45,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x0e, 0x58, 0xb4, 0x2c, 0x35, 0xaf, 0x44, 0x82,
	0x09, 0x2a, 0x0a, 0xe2, 0x08, 0x09, 0x71, 0xb1, 0x94, 0x96, 0x66, 0xa6, 0x48, 0x30, 0x83, 0x05,
	0xc1, 0x6c, 0x21, 0x49, 0x2e, 0x8e, 0xf4, 0xa2, 0xfc, 0xd2, 0x82, 0xf8, 0xcc, 0x14, 0x09, 0x16,
	0xb0, 0x38, 0x3b, 0x98, 0xef, 0x99, 0xa2, 0xa4, 0xc1, 0xc5, 0x17, 0x9c, 0x9a, 0x97, 0x02, 0xb2,
	0x26, 0xb8, 0x24, 0xb1, 0xa4, 0xb4, 0x58, 0x48, 0x8c, 0x8b, 0xad, 0x18, 0xcc, 0x82, 0xda, 0x06,
	0xe5, 0x19, 0x95, 0x73, 0x49, 0x60, 0xb8, 0x2c, 0x18, 0xe2, 0x6a, 0xa1, 0x68, 0x2e, 0x3e, 0xbf,
	0xfc, 0x92, 0xcc, 0xb4, 0xca, 0xe0, 0xd4, 0xbc, 0x12, 0xb0, 0x93, 0x55, 0xf4, 0x30, 0xfc, 0xa6,
	0x87, 0xa1, 0x5d, 0x4a, 0x11, 0x8b, 0x2a, 0x54, 0xe7, 0x28, 0x31, 0x38, 0xd9, 0x73, 0xc9, 0x24,
	0xe7, 0x64, 0x26, 0x17, 0xa5, 0x94, 0xe9, 0x65, 0xe6, 0x63, 0x6a, 0x70, 0x92, 0xc5, 0xe5, 0xac,
	0x00, 0x50, 0x20, 0x07, 0x30, 0x26, 0xb1, 0x81, 0x43, 0xdb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0xcd, 0x4e, 0x7f, 0x5c, 0x7d, 0x01, 0x00, 0x00,
}
